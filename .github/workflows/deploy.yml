name: dev-deployment
run-name: Buid dev image and deploy to dev server
on: 
  push:
    branches:
      - dev
   # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
env:
  IMAGE_TAG: "app"
  IMAGE_VERSION: "dev"

jobs:
  build-image:
      name: Build docker image and push to storage
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        # Install doctl.
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        - name: Log in to DigitalOcean Container Registry with short-lived credentials
          run: doctl registry login --expiry-seconds 1800

        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Build image
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./deploy/php-fpm/production.Dockerfile
            tags: ${{ secrets.REGISTRY_NAME }}/${{ env.IMAGE_TAG }}:${{ env.IMAGE_VERSION }}
        - 
          name: Push image to DigitalOcean Container Registry
          run: docker push ${{ secrets.REGISTRY_NAME }}/${{ env.IMAGE_TAG }}:${{ env.IMAGE_VERSION }}

  run-tests:
      name: Run Tests
      needs: build-image
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        # Install doctl.
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        - name: Log in to DigitalOcean Container Registry with short-lived credentials
          run: doctl registry login --expiry-seconds 1800

        - name: Pull docker image
          run: docker pull ${{ secrets.REGISTRY_NAME }}/${{ env.IMAGE_TAG }}:${{ env.IMAGE_VERSION }}
        
        - run: docker tag ${{ secrets.REGISTRY_NAME }}/${{ env.IMAGE_TAG }}:${{ env.IMAGE_VERSION }} app-image:latest
        
        # Run Tests
        -
          name: Run Test
          run: docker-compose -f deploy/test/docker-compose-test.yaml -p app run run-test
        # - 
        #   name: Upload logs to artifact
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: logs
        #     path: /tmp/myimage.tar
