name: dev-deployment
run-name: Buid dev image and deploy to dev server
on: 
  push:
    branches:
      - dev
   # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
env:
  APP_IMAGE_TAG: "dev"
  APP_IMAGE_VERSION: "latest"

jobs:
  build-image:
      name: Build DEV docker image
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        # # In this step, this action saves a list of existing images,
        # # the cache is created without them in the post run.
        # # It also restores the cache if it exists.
        # - uses: satackey/action-docker-layer-caching@v0.0.11
        #     # Ignore the failure of a step and avoid terminating the job.
        #   continue-on-error: true

          # Install doctl.
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        - name: Log in to DigitalOcean Container Registry with short-lived credentials
          run: doctl registry login --expiry-seconds 1800
        # Build a Docker image
        - name: Build container image
          run: docker build -f deploy/php-fpm/production.Dockerfile -t ${{ secrets.REGISTRY_NAME }}/${{ env.APP_IMAGE_TAG }}:${{ env.APP_IMAGE_VERSION }} .
  push-image:
      name: Push DEV docker image to DigitalOcean
      needs: build-image
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        
        # # In this step, this action saves a list of existing images,
        # # the cache is created without them in the post run.
        # # It also restores the cache if it exists.
        # - uses: satackey/action-docker-layer-caching@v0.0.11
        #     # Ignore the failure of a step and avoid terminating the job.
        #   continue-on-error: true

          # Install doctl.
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        - name: Log in to DigitalOcean Container Registry with short-lived credentials
          run: doctl registry login --expiry-seconds 1800
        # Build a Docker image
        - name: Build container image
          run: docker build -f deploy/php-fpm/production.Dockerfile -t ${{ secrets.REGISTRY_NAME }}/${{ env.APP_IMAGE_TAG }}:${{ env.APP_IMAGE_VERSION }} .
        - name: Push image to DigitalOcean Container Registry
          run: docker push ${{ secrets.REGISTRY_NAME }}/${{ env.APP_IMAGE_TAG }}:${{ env.APP_IMAGE_VERSION }}
  
  # build-base-image:
  #     name: Build base docker image
  #     runs-on: ubuntu-latest
  #     steps:
  #       - uses: actions/checkout@v4
  #       - uses: nathanheffley/laravel-phpunit-action@master
  # run-laravel-test:
  #   name: run Laravel test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: nathanheffley/laravel-phpunit-action@master