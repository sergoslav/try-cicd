name: dev-deployment
run-name: Buid dev image and deploy to dev server
on: 
  push:
    branches:
      - dev
   # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
env:
  IMAGE_TAG: "app"
  IMAGE_VERSION: "dev"

jobs:
  build-image:
      name: Build DEV docker image
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

          # Install doctl.
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        - name: Log in to DigitalOcean Container Registry with short-lived credentials
          run: doctl registry login --expiry-seconds 1800

        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Build image
          uses: docker/build-push-action@v2
          with:
            context: .
            file: ./deploy/php-fpm/production.Dockerfile
            tags: ${{ secrets.REGISTRY_NAME }}/${{ env.IMAGE_TAG }}:${{ env.IMAGE_VERSION }}
            outputs: type=docker,dest=/tmp/myimage.tar
        -
          name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            name: ${{ env.IMAGE_TAG }}-${{ env.IMAGE_VERSION }}
            path: /tmp/myimage.tar


  push-image:
      name: Push DEV docker image to DigitalOcean
      needs: build-image
      runs-on: ubuntu-latest
      steps:
        # - uses: actions/checkout@v4
        
        -
          name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        -
          name: Download artifact
          uses: actions/download-artifact@v2
          with:
            name: ${{ env.IMAGE_TAG }}-${{ env.IMAGE_VERSION }}
            path: /tmp
        -
          name: Load Docker image
          run: |
            docker load --input /tmp/myimage.tar
            docker image ls -a

          # Install doctl.
        - name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        - name: Log in to DigitalOcean Container Registry with short-lived credentials
          run: doctl registry login --expiry-seconds 1800
        # Build a Docker image
        # - name: Build container image
        #   run: docker build -f deploy/php-fpm/production.Dockerfile -t ${{ secrets.REGISTRY_NAME }}/${{ env.IMAGE_TAG }}:${{ env.IMAGE_VERSION }} .
        - name: Push image to DigitalOcean Container Registry
          run: docker push ${{ secrets.REGISTRY_NAME }}/${{ env.IMAGE_TAG }}:${{ env.IMAGE_VERSION }}
  
        # Delete cache
        - uses: geekyeggo/delete-artifact@v5
          with:
              name: ${{ env.IMAGE_TAG }}-${{ env.IMAGE_VERSION }}