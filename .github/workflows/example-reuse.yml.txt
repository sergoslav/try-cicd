name: first
on: [push]


env:
NPM_TOKEN: ${{secrets.NPM_TOKEN}}


jobs:
build:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
          id: buildx
          with:
            install: true
            buildkitd-flags: --debug
        - name: Cache Docker layers
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
                ${{ runner.os }}-buildx-
        - name: Bake Docker Image
          uses: docker/build-push-action@v2
          with:
            context: .
            builder: ${{ steps.buildx.outputs.name }}
            push: false
            tags: user/myimage:latest
            secrets: |
                "NPM_TOKEN=${{secrets.NPM_TOKEN}}"
            cache-from: type=local,src=/tmp/.buildx-cache
            cache-to: type=local,dest=/tmp/.buildx-cache-new
            outputs: type=docker,dest=/tmp/myimage.tar # export docker image
    - name: Upload artifact
    uses: actions/upload-artifact@v2
    with:
    name: myimage
    path: /tmp/myimage.tar
    # This ugly bit is necessary if you don't want your cache to grow forever
    # till it hits GitHub's limit of 5GB.
    # Temp fix
    # docker/build-push-action#252
    # moby/buildkit#1896
    - name: Move cache
    run: |
    rm -rf /tmp/.buildx-cache
    mv /tmp/.buildx-cache-new /tmp/.buildx-cache


use-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v1
    - name: Download artifact
    uses: actions/download-artifact@v2
    with:
    name: myimage
    path: /tmp
    - name: Load image
    run: |
    docker load --input /tmp/myimage.tar
    docker image ls -a